2019/05/08
	File I/O moved from testing phase (always 1 file) to storing results in res folder
		File I/O functions in ptestio.c
	
	Primality test from RWG 7.5 implemented
		find_QPP_7_5 implemented (RWG7.c)
			P1, P2, and Q found with a lookup table, will fail ~1/10^22 times (can be fixed)
		find_QPP renamed to find_QPP_7_2_4
		get_ST_0 implemented (used in primality_test_7_5)
		get_next_ST_i implemented (used in primality_test_7_5)
		
	Substantial refactoring of code in RWG2.c, RWG2s.c, RWG7.c and RWG7s.c (primality tests)
		Significant speedup for test 7.2/4 in RWG by eliminating repeated computation
	
	Bugfixes to do with small primes (first million primes as found in primesSmall.txt) not being recognised as prime
	
	Many functions refactored slightly to be more readable, faster or more stylistically consistant
	
	All methods now have asymptotic time data in their description
	
	Added ChangeLog
	
	Some testing done and results in res folder (with Ar^n+/-1 for A <= 26, r <= 13, n <= 5000)
	

2019/05/13
	added sieving for exponents for OEIS prime finding
		includes changes to OEIS testing function that cause small N to be checked only by trial division
		now generates an array of n to check primality of N for (done in utils.get_n_to_run)
	
	removed 2nd call to get_H_k in get_next_RST_i
		changed get_H_k to get_HI_k, now computes H(X,Y) and I(X,Y) = H(Y,X)
			this adds a few additional multiplications but halves the number of calls to the function needed

2019/05/16
	Added function to cycle through SIDH compatable primes

2019/05/30
	code to remove failure chance in find_QPP_7_5
	in get_QPP_7_2_4 prioritized values of QPP so that Q is a perfect square
	



Future Updates
	More selectivity for f values in SIDH prime finding method could be added
